<?php

namespace {{ base }}DataFixtures\MongoDB;

use Symfony\Component\DependencyInjection\ContainerAwareInterface;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Graviton\MongoDB\Fixtures\FixtureInterface;
use Doctrine\Common\Persistence\ObjectManager;

/**
 * Load a example consultant and loads of fake data
 *
 * @license  https://opensource.org/licenses/MIT MIT License
 * @link     http://swisscom.ch
 */
class Load{{ document }}Data implements FixtureInterface, ContainerAwareInterface
{
    /**
     * @private ContainerInterface
     */
    private $container;

    protected $restUtils;
    protected $fixtures;

    /**
     * {@inheritDoc}
     *
     * @param ContainerInterface $container service_container
     *
     * @return void
     */
    public function setContainer(ContainerInterface $container = null)
    {
        $this->container = $container;
        $this->restUtils = $this->container->get('graviton.rest.restutils');
        $this->fixtures = json_decode('{{ fixtures_json }}');
    }

    /**
     * {@inheritDoc}
     *
     * @param ObjectManager $manager Object Manager
     *
     * @return void
     */
    public function load(ObjectManager $manager)
    {
        if (count($this->fixtures) > 0) {
            $manager->clear();
            foreach ($this->fixtures as $record) {
                $manager->persist($this->getObjectFromRecord($record));
                $manager->flush();
            }
        }
    }

    public function getObjectFromRecord($record)
    {
        return $this->restUtils->deserializeContent(
            json_encode($record),
            '{{ base }}Document\{{ document }}'
        );
    }
}

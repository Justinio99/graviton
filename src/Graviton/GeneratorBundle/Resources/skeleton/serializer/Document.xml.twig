<?xml version="1.0" encoding="UTF-8"?>
<serializer>
  <class name="{{ base }}Document\{{ document }}" exclusion-policy="NONE">

{% if idField is defined %}
    <property name="id" type="{{ idField.serializerType }}" accessor-getter="getId"/>
{% else %}
{% if noIdField is not defined %}
    <property name="id" type="string" accessor-getter="getId"/>
{% else %}
    <property name="id" type="string" accessor-getter="getId" exclude="true"/>
{% endif %}
{% endif %}

{% if realIdField == true %}
    <!-- hidden id for embedding purposes -->
    <property name="realId" serialized-name="realId" type="string" accessor-getter="getRealId" exclude="true"/>
{% endif %}

    <property name="deletedDate" serialized-name="deletedDate" exclude="true" accessor-getter="getDeleteddate">
        <type><![CDATA[DateTime]]></type>
    </property>
{% if isrecordOriginFlagSet %}
    <property name="recordOrigin" serialized-name="recordOrigin" accessor-getter="getRecordOrigin" accessor-setter="setRecordOrigin">
        <type><![CDATA[string]]></type>
    </property>
{% endif %}

   <property name="fieldsAddedCount" type="int" accessor-getter="getFieldsAddedCount" exclude="true"/>
{% for field in fields %}
    {% if field.type == 'boolean' %}
      {% set getterMethod = "is#{field.fieldName|capitalize}" %}
    {% else %}
      {% set getterMethod = "get#{field.fieldName|capitalize}" %}
    {% endif %}

    {% set groups = "" %}
    {% if attribute(field, "groups") is defined and field.groups %}
        {% set groups = 'groups="' ~ field.groups|join(',') ~ '"' %}
    {% endif %}

    <property
        name="{{ field.fieldName }}"
        max-depth="5"
        {% if field.hidden == true %}exclude="true"{% else %}exclude="false"{% endif %}
        {{ groups }}
        serialized-name="{{ field.exposedName }}"
        accessor-getter="{{ getterMethod }}"
        accessor-setter="set{{ field.fieldName|capitalize }}">
      <type><![CDATA[{{ field.serializerType }}]]></type>
    </property>
{% endfor %}

{%- if syntheticFields is defined and syntheticFields is not empty %}
{%- for field in syntheticFields %}
    <property name="{{ field.1 }}" type="{{ field.0 }}" accessor-setter="set{{ field.1|capitalize }}" accessor-getter="get{{ field.1|capitalize }}" />
{%- endfor %}
{%- endif %}

  </class>
</serializer>

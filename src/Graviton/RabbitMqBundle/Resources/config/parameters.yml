parameters:
    graviton.rabbitmq.consumer.dump.class: Graviton\RabbitMqBundle\Service\DumpConsumer
    graviton.rabbitmq.document.queueevent.class: Graviton\RabbitMqBundle\Document\QueueEvent
    graviton.rabbitmq.command.produce.class: Graviton\RabbitMqBundle\Command\ProduceCommand
    graviton.rabbitmq.listener.eventstatusresponselistener.class: Graviton\RabbitMqBundle\Listener\EventStatusLinkResponseListener
    graviton.rabbitmq.document.eventworker.class: GravitonDyn\EventWorkerBundle\Document\EventWorker
    graviton.rabbitmq.document.eventstatus.class: GravitonDyn\EventStatusBundle\Document\EventStatus
    graviton.rabbitmq.document.eventstatusstatus.class: GravitonDyn\EventStatusBundle\Document\EventStatusStatus
    graviton.rabbitmq.document.eventstatuseventresource.class: GravitonDyn\EventStatusBundle\Document\EventStatusEventResourceEmbedded
    graviton.rabbitmq.validator.validinformationtype.class: Graviton\RabbitMqBundle\Validator\Constraints\ValidInformationTypeValidator
    graviton.rabbitmq.validator.validstatus.class: Graviton\RabbitMqBundle\Validator\Constraints\ValidStatusValidator
    graviton.rabbitmq.producer.job.class: Graviton\RabbitMqBundle\Producer\JobProducer

    # this is the route the DocumentEventPublisher will use to generate the 'statusUrl' field where the status can be fetched -->
    graviton.rabbitmq.document.eventstatusstatus.route: gravitondyn.eventstatus.rest.eventstatus.get

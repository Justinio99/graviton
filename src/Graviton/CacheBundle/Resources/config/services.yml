services:
    graviton.cache.listener.etagresponselistener:
        class: "%graviton.cache.listener.etagresponselistener.class%"
        tags:
          -
            name: kernel.event_listener
            event: kernel.response
            method: onKernelResponse
            priority: 110

    graviton.cache.listener.ifnonematchresponselistener:
        class: "%graviton.cache.listener.ifnonematchresponselistener.class%"
        tags:
          -
            name: kernel.event_listener
            event: kernel.response
            method: onKernelResponse
            priority: 100

    graviton.cache.listener.varnish:
      class: '%graviton.cache.listener.varnish.class%'
      tags:
        - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }
      arguments:
        - "@logger"
        - "%graviton.cache.server.hostname%"
        - "%graviton.cache.server.header%"

    Graviton\CacheBundle\Factory\CacheFactory:
      arguments:
        - "@cache.app"
        - "%graviton.cache.redis.host%"
        - "%graviton.cache.redis.port%"

    graviton.cache.adapter.app:
      class: Psr\Cache\CacheItemPoolInterface
      factory: ['@Graviton\CacheBundle\Factory\CacheFactory', 'getInstance']
      arguments: [true]

    # we only use symfony cache.. but as mongodb-odm didn't switch to PSR yet, we need to keep that for them..
    graviton.cache.adapter.mongo_odm:
      class: Doctrine\Common\Cache\CacheProvider
      factory: ['@Graviton\CacheBundle\Factory\CacheFactory', 'getDoctrineInstance']
      arguments: [true]

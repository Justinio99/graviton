parameters:
  graviton.proxy.controller.proxy.class: Graviton\ProxyBundle\Controller\ProxyController
  graviton.proxy.definition.httploader.class: Graviton\ProxyBundle\Definition\Loader\HttpLoader
  graviton.proxy.definition.loader.factory.class: Graviton\ProxyBundle\Definition\Loader\LoaderFactory
  graviton.proxy.dispersalstrategy.swagger.class: Graviton\ProxyBundle\Definition\Loader\DispersalStrategy\SwaggerStrategy
  graviton.proxy.service.apidefinitionloader.class: Graviton\ProxyBundle\Service\ApiDefinitionLoader
  graviton.proxy.swagger.document.parser.class: Swagger\Document
  graviton.proxy.proxy.class: Graviton\PhpProxy\Proxy
  graviton.proxy.psrhttpmessage.httpfoundationfactory.class: Symfony\Bridge\PsrHttpMessage\Factory\HttpFoundationFactory
  graviton.proxy.psrhttpmessage.factory.class: Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory
  graviton.proxy.transformationhandler.class: Graviton\ProxyBundle\Service\TransformationHandler

services:
    # guzzle definitions -->
    graviton.proxy.psrhttpmessage.httpfoundationfactory:
        class: "%graviton.proxy.psrhttpmessage.httpfoundationfactory.class%"

    graviton.proxy.psrhttpmessage.factory:
        class: "%graviton.proxy.psrhttpmessage.factory.class%"
        factory: ['Graviton\PhpProxy\Factory', 'createPsrHttpFactory']

    graviton.proxy.transformationhandler:
        class: "%graviton.proxy.transformationhandler.class%"

    graviton.proxy:
        class: "%graviton.proxy.proxy.class%"
        arguments:
            - "@graviton.core.http.client"

    # controller definitions -->
    graviton.proxy.controller.proxy:
        class: "%graviton.proxy.controller.proxy.class%"
        public: true
        arguments:
            - "@graviton.proxy"
            - "@graviton.proxy.service.apiloader"
            - "@graviton.proxy.psrhttpmessage.factory"
            - "@graviton.proxy.psrhttpmessage.httpfoundationfactory"
            - "@graviton.proxy.service.transformationhandler"
            - "%graviton.proxy.sources%"

    # swagger related definitions -->
    graviton.proxy.swagger.document.dummy:
        class: "stdClass"

    graviton.proxy.swagger.document.parser:
        class: "%graviton.proxy.swagger.document.parser.class%"
        arguments:
          - "@graviton.proxy.swagger.document.dummy"

    graviton.proxy.dispersalstrategy.swagger:
        class: "%graviton.proxy.dispersalstrategy.swagger.class%"
        arguments:
          - "@graviton.proxy.swagger.document.parser"

    # definition loaders -->
    graviton.proxy.definition.httploader:
        class: "%graviton.proxy.definition.httploader.class%"
        arguments:
          - "@validator"
          - "@graviton.core.http.client"
          - "@logger"
        calls:
          -
            method: setCache
            arguments:
              - "@graviton.cache.adapter.app"
              - 86400

    # api loaders -->
    graviton.proxy.service.apiloader:
        class: "%graviton.proxy.service.apidefinitionloader.class%"
        arguments:
          - "@graviton.proxy.service.loaderfactory"

    graviton.proxy.service.loaderfactory:
        class: "%graviton.proxy.definition.loader.factory.class%"

    # transformation definitions -->
    graviton.proxy.service.transformationhandler:
        class: "%graviton.proxy.transformationhandler.class%"

<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:security="http://symfony.com/schema/dic/security"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

  <security:config>
    <encoder class="Symfony\Component\Security\Core\User\User"
             algorithm="bcrypt"
             cost="15"/>

    
    <role id="ROLE_ADMIN">ROLE_USER</role>
    <role id="ROLE_SUPER_ADMIN">ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH</role>

    
    <provider name="in_memory">
      <!-- This provider was rewritten from the yml one and still needs some testing.
           I'm not sure if specifying roles as a subtag is the correct way to go
           but we need to change this so some better auth mechanism anyhow.
           Originally it looked like so:
                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
      -->
      <memory>
        <user name="user" password="userpass">
          <role id="ROLE_USER"/>
        </user>
        <user name="admin" password="adminpass">
          <role id="ROLE_ADMIN"/>
        </user>
      </memory>
    </provider>

  </security:config>

<!--
The below was copied from xml and parts that where not rewritten now are left here

security:
    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/demo/secured/login$
            security: false

        secured_area:
            pattern:    ^/demo/secured/
            form_login:
                check_path: _security_check
                login_path: _demo_login
            logout:
                path:   _demo_logout
                target: _demo
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
        - { path: ^/demo/secured/hello/admin/, roles: ROLE_ADMIN }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
-->

</container>

